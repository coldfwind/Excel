## -*- coding: utf-8 -*-
import pandas as pd
from email.parser import Parser
from email.header import decode_header
from email.utils import parseaddr
import poplib
import numpy as np
sheet_name = []
class Email(object):
    def Register(self):
        email = 'caoqilin1818@163.com'
        password = 'caoqilin1818'
        pop3_server = 'pop.163.com'
        server = poplib.POP3_SSL(pop3_server, 995)
        server.set_debuglevel(1)
        print(server.getwelcome().decode('utf-8'))
        # 身份认证:
        server.user(email)
        server.pass_(password)
        print('Messages: %s. Size: %s' % server.stat())
        resp, mails, octets = server.list()
        # 获取最新一封邮件, 注意索引号从1开始:
        index = len(mails)
        print('未读邮件的数量', index)
        resp, lines, octets = server.retr(254)

        msg_content = b'\r\n'.join(lines).decode('utf-8')
        # 稍后解析出邮件:
        msg = Parser().parsestr(msg_content)
        self.get_data(msg, server)
    def get_data(self,msg, server):
        def guess_charset(msg):
            charset = msg.get_charset()
            if charset is None:
                content_type = msg.get('Content-Type', '').lower()
                pos = content_type.find('charset=')
                if pos >= 0:
                    charset = content_type[pos + 8:].strip()
            return charset
        def decode_str(s):
            value, charset = decode_header(s)[0]
            if charset:
                value = value.decode(charset)
            sheet_name.append(value)
            return value
        def print_info(msg, indent=0):
            if indent == 0:
                # print('------------------------')
                for header in ['From', 'To', 'Subject']:
                    value = msg.get(header, '')
                    if value:
                        if header == 'Subject':
                            value = decode_str(value)
                        else:
                            hdr, addr = parseaddr(value)
                            name = decode_str(hdr)
                            value = u'%s <%s>' % (name, addr)
                    print('%s%s: %s' %('  ' * indent, header, value))
            if (msg.is_multipart()):
                parts = msg.get_payload()
                for n, part in enumerate(parts):
                    print('%spart %s' % ('  ' * indent, n))
                    print_info(part, indent + 1)
            else:
                content_type = msg.get_content_type()
                if content_type == 'text/plain':
                    content = msg.get_payload(decode=True)
                    charset = guess_charset(msg)
                    if charset:
                        content = content.decode(charset)
                    # print('%sText: %s' % ('  ' * indent, content))
                    con_li = content.replace('\r\n',' ').split(' ------------------- ')
                    print(con_li)
                    item_list = []
                    item_list.append(['策略类别', '收益回撤比', '年化收益', '最大回撤比', '夏普比率', '当日收益', '敞口比例(%)'])
                    for i in con_li:
                        title_list = i.split(' ')
                        content_item = []
                        for title in title_list:
                            if ':' not in title and '：' not in title:
                                content_item.append(title)
                            elif '：' in title:
                                content_item.append(title.split('：')[0])
                        item_list.append(content_item)
                    # df = pd.DataFrame(data=item_list, columns=['策略类别','收益回撤比','年化收益','最大回撤比','夏普比率','当日收益','敞口比例(%)'])
                    # df = pd.DataFrame(data=item_list,columns=None,index=None)
                    A = np.array(item_list)
                    B = np.transpose(A)
                    df = pd.DataFrame(data=B[1:], index=None, columns=B[0])
                    df['日期'] = sheet_name[2][23:]
                    df.to_csv('D:/email/'+ sheet_name[2] +'.csv', index=False, encoding='gbk')
                    print(sheet_name[2])
                else:
                    print('%sAttachment: %s' % ('  ' * indent, content_type))
        print_info(msg)
        server.quit()
if __name__ == "__main__":
    email = Email()
    email.Register()
